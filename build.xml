<project name="AntLab3" basedir=".">
    <property file="build.properties"/>
    <path id="classpath.test">
        <pathelement location="${junit.lib}"/>
        <pathelement location="${hamcrest-core}"/>
        <pathelement location="${ant.junit.lib}"/>
        <pathelement location="${log.lib}"/>
    </path>
    <target name="compile" description="Compiling">
        <mkdir dir="${compiled.classes}"/>
        <mkdir dir="${compiled.tests}"/>
        <javac destdir="${compiled.classes}" includeantruntime="false">
            <src path="${main}"/>
            <classpath>
                <pathelement location="${compiled.classes}"/>
                <path refid="classpath.test"/>
            </classpath>
        </javac>
        <javac destdir="${compiled.tests}" includeantruntime="false">
            <src path="${test}"/>
            <classpath>
                <pathelement location="${compiled.classes}"/>
                <path refid="classpath.test"/>
            </classpath>
        </javac>
    </target>
    <target name="build" depends="compile" description="Building">
        <jar destfile="${jar}" basedir="${compiled.classes}" compress="false" index="true">
            <zipgroupfileset dir="." includes="${log.lib}"/>
            <manifest>
                <attribute name="Main-Class" value="${main.class}"/>
                <attribute name="Version" value="${version}"/>
            </manifest>
        </jar>
    </target>
    <target name="clean" description="Delete all *.class files">
        <delete dir="${compiled.classes}"/>
        <delete dir="${compiled.tests}"/>
    </target>
    <target name="test" depends="build" description="Testing">
        <junit showoutput="yes" printsummary="on">
            <formatter type="xml"/>
            <classpath>
                <path refid="classpath.test"/>
                <pathelement location="${compiled.classes}"/>
                <pathelement location="${compiled.tests}"/>
            </classpath>
            <batchtest todir="${test.results}">
                <fileset dir="${test}" includes="*Test*.java"/>
            </batchtest>
        </junit>
    </target>
    <target name="music" depends="build" description="Play music when build">
        <echo>Playing music</echo>
        <sound>
            <success source="${music}/Success.wav"/>
            <fail source="${music}/Fail.wav"/>
        </sound>
    </target>
    <target name="alt" depends="build" description="Alt building">
        <property file="exchange.properties"/>
        <copy todir="${build.alt}">
            <fileset dir="${src}"/>
        </copy>
        <replaceregexp file="${main}/Main.java" match="${old.shot}" replace="${new.shot}" byline="true" flags="g"/>
        <replaceregexp file="${main}/Shot.java" match="${old.shot}" replace="${new.shot}" byline="true" flags="g"/>
        <move file="${main}/${old.shot}.java" tofile="${main}/${new.shot}.java"/>
        <replaceregexp file="${main}/ShotsStorage.java" match="${old.shot}" replace="${new.shot}" byline="true"
                       flags="g"/>
        <move file="${main}/${old.shotsstorage}.java" tofile="${main}/${new.shotsstorage}.java"/>
        <replaceregexp file="${main}/UserInterface.java" match="${old.shot}" replace="${new.shot}" byline="true"
                       flags="g"/>
        <replaceregexp file="${test}/ShotTest.java" match="${old.shot}" replace="${new.shot}" byline="true" flags="g"/>
        <move file="${test}/${old.shottest}.java" tofile="${test}/${new.shottest}.java"/>

        <antcall target="clean"/>
        <antcall target="build"/>

        <delete dir="${src}"/>
        <copy todir="${src}">
            <fileset dir="${build.alt}"/>
        </copy>
        <delete dir="${build.alt}"/>

    </target>

    <!--    <target name="change">-->
    <!--        <property file="exchange.properties"/>-->
    <!--    </target>-->
    <!--    <target name="run" depends="build">-->
    <!--        <java jar="${jar}" fork="true"/>-->
    <!--    </target>-->
</project>
